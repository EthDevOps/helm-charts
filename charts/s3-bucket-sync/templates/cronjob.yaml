apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-job
spec:
  schedule: "{{ .Values.backupSchedule }}"
  timeZone: 'Etc/UTC'
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          {{- if .Values.useCustomConfig }}
          volumes:
            - name: custom-config-vol
              configMap:
                name: {{ .Values.customConfig }}
          {{- end }}
          containers:
          - name: {{ .Release.Name }}-minio-mirror
            image: docker.ethquokkaops.io/ethquokkaops/ethdevops/s3-sync-docker:{{ .Values.imageTag }}
            {{- if .Values.useCustomConfig }}
            volumeMounts:
            - name: custom-config-vol
              mountPath: "/opt/config.tmpl"
              subPath: "config.tmpl"
            {{- end }}
            envFrom:
              - configMapRef:
                  name: {{ .Release.Name }}-sync-config
            {{- if and (not .Values.existingSourceSecret) (not .Values.existingDestinationSecret) }}
              - secretRef:
                  name: {{ .Release.Name }}-sync-credentials
            {{- end }}
            env:
            {{- if .Values.existingSourceSecret }}
              - name: SOURCE_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.existingSourceSecret }}
                    key: {{ .Values.sourceSecretKeys.accessKey }}
              - name: SOURCE_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.existingSourceSecret }}
                    key: {{ .Values.sourceSecretKeys.secretKey }}
            {{- end }}
            {{- if .Values.existingDestinationSecret }}
              - name: DESTINATION_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.existingDestinationSecret }}
                    key: {{ .Values.destinationSecretKeys.accessKey }}
              - name: DESTINATION_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.existingDestinationSecret }}
                    key: {{ .Values.destinationSecretKeys.secretKey }}
            {{- end }}
            {{- if and (not .Values.existingSourceSecret) .Values.existingDestinationSecret }}
              - name: SOURCE_ACCESS_KEY
                value: "{{ .Values.sourceAccessKey }}"
              - name: SOURCE_SECRET_KEY
                value: "{{ .Values.sourceSecretKey }}"
            {{- end }}
            {{- if and .Values.existingSourceSecret (not .Values.existingDestinationSecret) }}
              - name: DESTINATION_ACCESS_KEY
                value: "{{ .Values.destinationAccessKey }}"
              - name: DESTINATION_SECRET_KEY
                value: "{{ .Values.destinationSecretKey }}"
            {{- end }}

