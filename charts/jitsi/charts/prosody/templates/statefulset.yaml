apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prosody.fullname" . }}
  labels:
    {{- include "prosody.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: "{{ include "prosody.fullname" . }}"
  replicas: {{ if .Values.useExternalProsody }}0{{ else }}1{{end}}
  selector:
    matchLabels:
      {{- include "prosody.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prosody.selectorLabels" . | nindent 8 }}
      {{- range $label, $value := mergeOverwrite .Values.global.podLabels .Values.podLabels }}
        {{ $label }}: {{ $value }}
      {{- end }}
      annotations:
        si.jit.meet/hash-secret: "{{ toYaml .Values.secretEnvs | sha256sum | trunc 32 }}"
        si.jit.meet/hash-configmap: "{{ toYaml .Values.env | sha256sum | trunc 32 }}"
      {{- range $annotation, $value := mergeOverwrite .Values.global.podAnnotations .Values.podAnnotations }}
        {{ $annotation }}: {{ $value }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "prosody.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: download-plugins
          image: alpine
          command: ['sh', '-c', 'apk add wget && wget -i /urls/plugins.txt -P /prosody-plugins-custom']
          volumeMounts:
          - name: custom-plugins
            mountPath: /prosody-plugins-custom
          - name: plugin-urls
            mountPath: /urls

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ tpl (default .Chart.AppVersion .Values.image.tag ) . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ include "prosody.fullname" . }}
          - secretRef:
              name: {{ include "prosody.fullname" . }}
          {{- range .Values.extraEnvFrom }}
          - {{ tpl (toYaml . ) $ | indent 12 | trim }}
          {{- end }}
          {{- if .Values.global.releaseSecretsOverride.enabled }}
          {{- range .Values.global.releaseSecretsOverride.extraEnvFrom }}
          - {{ tpl (toYaml . ) $ | indent 12 | trim }}
          {{- end }}
          {{- end }}
          {{- if .Values.extraEnvs }}
          env:
          {{- range .Values.extraEnvs }}
          - {{ tpl (toYaml . ) $ | indent 12 | trim }}
          {{- end }}
          {{- end }}
          ports:
            - name: xmpp-c2s
              containerPort: {{ index .Values.service.ports "xmpp-c2s" }}
              protocol: TCP
            - name: xmpp-s2s
              containerPort: {{ index .Values.service.ports "xmpp-s2s" }}
              protocol: TCP
            - name: xmpp-component
              containerPort: {{ index .Values.service.ports "xmpp-component" }}
              protocol: TCP
            - name: bosh-insecure
              containerPort: {{ index .Values.service.ports "bosh-insecure" }}
              protocol: TCP
            - name: bosh-secure
              containerPort: {{ index .Values.service.ports "bosh-secure" }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /config
          - name: custom-plugins
            mountPath: /prosody-plugins-custom
          - name: prosody-data
            mountPath: {{ .Values.dataDir }}
          {{- if .Values.custom.contInit._10_config }}
          - name: custom-cont-inits
            mountPath: /etc/cont-init.d/10-config
            subPath: 10-config
          {{- end }}
          {{- if .Values.custom.defaults._prosody_cfg_lua }}
          - name: custom-defaults
            mountPath: /defaults/prosody.cfg.lua
            subPath: prosody.cfg.lua
          {{- end }}
          {{- if .Values.custom.defaults._saslauthd_conf }}
          - name: custom-defaults
            mountPath: /defaults/saslauthd.conf
            subPath: saslauthd.conf
          {{- end }}
          {{- if .Values.custom.defaults._jitsi_meet_cfg_lua }}
          - name: custom-defaults
            mountPath: /defaults/conf.d/jitsi-meet.cfg.lua
            subPath: jitsi-meet.cfg.lua
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
      - name: config
        emptyDir: {}
      - name: custom-plugins
        emptyDir: {}
      - name: plugin-urls
        configMap:
          name: {{ include "prosody.fullname" . }}-custom-plugins
      - name: custom-cont-inits
        configMap:
          defaultMode: 493
          name: {{ include "prosody.fullname" . }}-cont-inits
          items:
            - key: 10-config
              path: 10-config
      - name: custom-defaults
        configMap:
          name: {{ include "prosody.fullname" . }}-defaults
          items:
            - key: prosody.cfg.lua
              path: prosody.cfg.lua
            - key: saslauthd.conf
              path: saslauthd.conf
            - key: jitsi-meet.cfg.lua
              path: jitsi-meet.cfg.lua
      - name: prosody-data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: prosody-data
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if or .Values.persistence.enabled .Values.extraVolumeClaimTemplates }}
  volumeClaimTemplates:
  - metadata:
      name: prosody-data
    spec:
      accessModes:
        - ReadWriteOnce
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- with .Values.persistence.storageClassName }}
      storageClassName: {{ . | quote }}
      {{- end }}
  {{- with .Values.extraVolumeClaimTemplates }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- end }}
