apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gnosis-safe.fullname" . }}
  labels:
    {{- include "gnosis-safe.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gnosis-safe.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gnosis-safe.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gnosis-safe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["docker/web/run_web.sh"]
          ports:
            - name: apphttp
              containerPort: 8888
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "gnosis-safe.fullname" . }}-config
            - secretRef:
                name: {{ include "gnosis-safe.fullname" . }}-secret
          volumeMounts:
            - name: nginx-shared
              mountPath: /nginx
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-shared
              mountPath: /nginx
      volumes:
        - name: nginx-shared
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: {{ include "gnosis-safe.fullname" . }}-nginx-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
