apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "discourse.fullname" . }}
  labels:
    {{- include "discourse.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "discourse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "discourse.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "discourse.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}/{{ .Values.forum.name }}:{{ .Values.forum.version | default .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          env:
            - name: DISCOURSE_HOSTNAME
              value: {{ .Values.env.DISCOURSE_HOSTNAME | quote }}
            - name: DISCOURSE_FORCE_HTTPS
              value: {{ .Values.env.DISCOURSE_FORCE_HTTPS | quote }}
            - name: RAILS_ENV
              value: {{ .Values.env.RAILS_ENV | quote }}
            - name: UNICORN_WORKERS
              value: {{ .Values.env.UNICORN_WORKERS | quote }}
            - name: UNICORN_SIDEKIQS
              value: {{ .Values.env.UNICORN_SIDEKIQS | quote }}
            - name: RUBY_GC_HEAP_GROWTH_MAX_SLOTS
              value: {{ .Values.env.RUBY_GC_HEAP_GROWTH_MAX_SLOTS | quote }}
            - name: RUBY_GC_HEAP_INIT_SLOTS
              value: {{ .Values.env.RUBY_GC_HEAP_INIT_SLOTS | quote }}
            - name: RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR
              value: {{ .Values.env.RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR | quote }}
            - name: LANG
              value: {{ .Values.env.LANG | quote }}
            - name: LC_ALL
              value: {{ .Values.env.LC_ALL | quote }}
            - name: LANGUAGE
              value: {{ .Values.env.LANGUAGE | quote }}
            - name: DISCOURSE_DB_SOCKET
              value: {{ .Values.env.DISCOURSE_DB_SOCKET | quote }}
            - name: LETSENCRYPT_DIR
              value: {{ .Values.env.LETSENCRYPT_DIR | quote }}
            {{- if .Values.smtp.address }}
            - name: DISCOURSE_SMTP_ADDRESS
              value: {{ .Values.smtp.address | quote }}
            - name: DISCOURSE_SMTP_PORT
              value: {{ .Values.smtp.port | quote }}
            {{- if .Values.smtp.username }}
            - name: DISCOURSE_SMTP_USER_NAME
              value: {{ .Values.smtp.username | quote }}
            {{- end }}
            {{- if .Values.smtp.password }}
            - name: DISCOURSE_SMTP_PASSWORD
              value: {{ .Values.smtp.password | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.developerEmails }}
            - name: DISCOURSE_DEVELOPER_EMAILS
              value: {{ .Values.developerEmails | quote }}
            {{- end }}
            {{- if .Values.letsencrypt.accountEmail }}
            - name: LETSENCRYPT_ACCOUNT_EMAIL
              value: {{ .Values.letsencrypt.accountEmail | quote }}
            {{- end }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: discourse-shared
              mountPath: /shared
            - name: discourse-logs
              mountPath: /var/log
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: discourse-shared
          persistentVolumeClaim:
            claimName: {{ include "discourse.fullname" . }}-shared
        - name: discourse-logs
          persistentVolumeClaim:
            claimName: {{ include "discourse.fullname" . }}-logs
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
